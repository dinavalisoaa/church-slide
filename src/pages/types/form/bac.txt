import React, { useState } from "react";
import {
  Container,
  Grid,
  TextField,
  Box,
  Button,InputLabel ,
  Typography,Divider ,  
  Card,
  Menu as MenuIcon,
  CardContent,FormControlLabel ,
  CardMedia,Checkbox ,
  Modal,
  IconButton,FormControl,
  InputAdornment,
} from "@mui/material";
import { useNavigate } from "react-router-dom";
import CloseIcon from "@mui/icons-material/Close";
import FullscreenIcon from "@mui/icons-material/Fullscreen";
import { invoke } from "@tauri-apps/api/tauri";
import { useForm, Controller } from 'react-hook-form';

const selectOptions = [
  { id: 1, label: "Business development" },
  { id: 2, label: "Marketing" },
  { id: 3, label: "Sales" },
];
const TypesForm = ({ open, setOpen }) => {
  const [isFullScreen, setIsFullScreen] = useState(false);
  const handleClose = () => setOpen(false);
  const toggleFullScreen = () => setIsFullScreen(!isFullScreen);
  const [formData, setFormData] = useState({
    name: "",
  });
  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
  };

  
type FormData = {
  name: string;
  email: string;
  phone: string;
  department: string;
  subject: string;
  question: string;
  checkbox: string[];
  radio: string;
  switch: string[];
  file: File | null;
};
const { control, handleSubmit, setValue, formState: { errors } } = useForm<FormData>({
  defaultValues: {
    name: '',
    email: '',
    phone: '',
    department: selectOptions[0].label,
    subject: '',
    question: '',
    checkbox: ['lorem'],
    radio: 'one',
    switch: ['one'],
    file: null,
  },
});

const onSubmit = (data: FormData) => {
  save();
  console.log('Form Submitted:', data);
};

const save = async () => {
  console.log("Hello ,,............ ooo"); 
  const param = {
    name:'Im Creep'
   
  };
 const s=await invoke("save_types", {
    form: param,
  }).then((response) => console.log("................>greet", response));
  console.log(s,".............");
};
  // const handleSubmit = (e) => {
  //   e.preventDefault();
  //   console.log("Données du formulaire:", formData);
  //   handleClose();
  // };

  return (
    <>
      <Modal
        open={open}
        onClose={handleClose}
        aria-labelledby="modal-title"
        aria-describedby="modal-description"
      >
        <Box
        component="form"
        onSubmit={handleSubmit(onSubmit)}
        sx={{
          backgroundColor: '#fff',
          padding: 4,
          borderRadius: 2,
          boxShadow: 3,
          display: 'flex',
          flexDirection: 'column',
          gap: 3,
        }}
      >
        {/* Nom avec icône */}
        <Grid container spacing={3}>
          <Grid item xs={12} md={6}>
            <Controller
              name="name"
              control={control}
              rules={{ required: 'Nom requis' }}
              render={({ field }) => (
                <TextField
                  {...field}
                  label="Nom"
                  fullWidth
                  value={}
                  variant="outlined"
                  error={!!errors.name}
                  helperText={errors.name?.message}
                  InputProps={{
                    startAdornment: <i className="mdi mdi-account"></i>,
                  }}
                />
              )}
            />
          </Grid>

          {/* Email avec icône */}
          <Grid item xs={12} md={6}>
            <Controller
              name="email"
              control={control}
              rules={{ required: 'Email requis' }}
              render={({ field }) => (
                <TextField
                  {...field}
                  label="Email"
                  type="email"
                  fullWidth
                  variant="outlined"
                  error={!!errors.email}
                  helperText={errors.email?.message}
                  InputProps={{
                    startAdornment: <i className="mdi mdi-mail"></i>,
                  }}
                />
              )}
            />
          </Grid>
        </Grid>

        {/* Téléphone */}
        <Grid container spacing={3}>
          <Grid item xs={12}>
            <Controller
              name="phone"
              control={control}
              render={({ field }) => (
                <TextField
                  {...field}
                  label="Téléphone"
                  fullWidth
                  variant="outlined"
                  helperText="Ne pas entrer de zéro devant"
                />
              )}
            />
          </Grid>
        </Grid>

     

        {/* Question (textarea) */}
        <Grid container spacing={3}>
          <Grid item xs={12}>
            <Controller
              name="question"
              control={control}
              render={({ field }) => (
                <TextField
                  {...field}
                  label="Question"
                  multiline
                  rows={4}
                  fullWidth
                  variant="outlined"
                  placeholder="Expliquez comment nous pouvons vous aider"
                />
              )}
            />
          </Grid>
        </Grid>

        {/* Diviseur */}
        <Divider sx={{ marginY: 2 }} />

        {/* Checkbox */}
        <Grid container spacing={3}>
          <Grid item xs={12}>
            <FormControl>
              <FormControlLabel
                control={<Checkbox />}
                label="Lorem"
              />
            </FormControl>
          </Grid>
        </Grid>

        {/* Boutons */}
        <Box sx={{ display: 'flex', gap: 2 }}>
          <Button
            variant="contained"
            color="primary"
            type="submit"
            sx={{ padding: '10px 20px' }}
          >
            Soumettre
          </Button>

          <Button
            variant="outlined"
            color="secondary"
            type="reset"
            sx={{ padding: '10px 20px' }}
          >
            Réinitialiser
          </Button>
        </Box>

        {/* Formulaire avec statut */}
      
      </Box>
      </Modal>
    </>
  );
};
export default TypesForm;
