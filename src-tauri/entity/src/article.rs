// //! SeaORM Entity. Generated by sea-orm-codegen 0.3.2

// use core::f32;

// use sea_orm::entity::prelude::*;
// use serde::{Deserialize, Serialize};
// #[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
// #[sea_orm(table_name = "articles")]
// pub struct Model {
//     #[sea_orm(primary_key)]
//     #[serde(skip_deserializing)]
//     pub id: i32,
//     pub title: String,
//     pub amount:  Option<f32>,
//     pub verification:  Option<f32>,
//     #[sea_orm(column_type = "Text")]
//     pub text: String,
// }

// fn num_factory() -> u8 {
//     0
// }
// #[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
// pub enum Relation {
//     Fruit,
// }

// impl RelationTrait for Relation {
//     fn def(&self) -> RelationDef {
//         match self {
//             Self::Fruit => Entity::has_one(super::fruit::Entity).into(),
//         }
//     }
// }

// impl Related<super::fruit::Entity> for Entity {
//     fn to() -> RelationDef {
//         Relation::Fruit.def()
//     }
// }

// impl ActiveModelBehavior for ActiveModel {}